generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int          @id @default(autoincrement())
  name         String       @db.VarChar(255)
  email        String       @unique @db.VarChar(255)
  phone        String?      @db.VarChar(255)
  passwordHash String       @db.VarChar(255)
  role         String       @db.VarChar(255)
  refreshToken String?      @db.VarChar(255)
  createdAt    DateTime     @default(now()) @db.Timestamptz(6)
  updatedAt    DateTime     @updatedAt @db.Timestamptz(6)
  aidRequests  AidRequest[]
}

model AidRequest {
  id Int @id @default(autoincrement())

  userId Int

  organizationId Int?

  type String

  description String
  latitude    Float
  longitude   Float
  status      String?
  isDeleted   Boolean @default(false)
  user        User    @relation(fields: [userId], references: [id])

  organization Organization? @relation(fields: [organizationId], references: [id])
  Comment      Comment[]
  Document     Document[]
}

model Organization {
  id              Int          @id @default(autoincrement())
  name            String
  type            String
  mission         String
  address         String
  phone           String
  email           String
  website         String?
  socialMedia     String?
  contactName     String
  contactPhone    String
  contactEmail    String
  donationAccount String
  iban            String
  taxNumber       String
  aidTypes        String
  targetAudience  String
  volunteerNeeds  String
  activeProjects  String?
  events          String?
  logo            String?
  establishedDate DateTime
  latitude        Float
  longitude       Float
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  aidRequest      AidRequest[]
}

model Comment {
  id           Int        @id @default(autoincrement())
  content      String     @db.VarChar(255)
  aidRequestId Int
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  aidRequest   AidRequest @relation(fields: [aidRequestId], references: [id])
}

model Document {
  id           Int        @id @default(autoincrement())
  name         String     @db.VarChar(255)
  url          String     @db.VarChar(255)
  aidRequestId Int
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  aidRequest   AidRequest @relation(fields: [aidRequestId], references: [id])
}
